                                    aes(y = interactions, fill=treatment),
                                    summary_FUN = sum) +
                                  layers() + scale_y_continuous(limits = c(NA,NA))
all_pl_objs$etho_stimuli_zoom <- all_pl_objs$etho_stimuli +
                                        zoomed_cartesian
                                        
dt[, interval := as.numeric(as.character(xmv(interval)))]
all_pl_objs$etho_stimuli_rel_ovrw <- ggetho(dt[t > days(1) &  t < days(10) & xmv(treatment) == "SD"],
                                    aes(z = (interactions / 10) / (1/as.numeric(interval))),
                                    summary_FUN = mean) +
                                    stat_tile_etho()
                                    
all_pl_objs$etho_stimuli_rel <- ggetho(dt[t > days(1) &  t < days(10) & xmv(treatment) == "SD"],
                                    aes(y = (interactions / 10) / (1/as.numeric(interval))),
                                    summary_FUN = mean, time_wrap= hours(24)) +
                                  layers(annotate=F) + scale_y_continuous(name="N_interactions / N_maximum" ,limits = c(NA,NA)) + coord_cartesian(xlim = c(days(0),days(1)))
all_pl_objs$etho_stimuli_rel
dt[, distance := abs(c(0, diff(x))), by=id]
all_pl_objs$etho_distance <- ggetho(dt[xmv(sdi) %in% c(0,10)],
                                    aes(y = distance, fill=treatment),
                                    summary_FUN = sum) +
                                  layers() + scale_y_continuous(limits = c(NA,NA))
all_pl_objs$etho_distance_wrapped <- ggetho(dt[t > days(1) &  t < days(10) & xmv(sdi) %in% c(0,10)],
                                    aes(y = distance / 9, fill=treatment),
                                    summary_FUN = sum,  time_wrap= hours(24)) +  
layers() + scale_y_continuous(limits = c(NA,NA)) +
coord_cartesian(xlim = c(days(0),days(1)))
#~ all_pl_objs$etho_stimuli_zoom <- all_pl_objs$etho_stimuli +
#~                                         zoomed_cartesian
                                        
                                        
                                        
################### scalar stats here and barplots (1 value/animal)
# shared layers
layer_barpl <- function(){
list(
facet_grid(sex ~ .),
geom_jitter(alpha=.3, height=0),
stat_summary(fun.y = "mean", geom="point", shape = 4, size=2.5, colour="black"),
stat_summary(fun.data = "mean_cl_boot", geom="errorbar",colour="black"),
scale_fill_manual(values=CONTROL_SD_PALETTE),
scale_colour_manual(values=CONTROL_SD_PALETTE), generic_theme
)
}
stat_rebound_dt <- na.omit(rejoin(
dt[,
.(
overall_sleep = mean(asleep),
sleep_baseline_day = mean(asleep[t %between%  hours(c(0, 12))]),
sleep_baseline_night = mean(asleep[t %between% hours(c(-12, 0))]),
sleep_baseline_day3h = mean(asleep[t %between% hours(c(0, 3))]),
quiet_baseline_day3h = mean(!moving[t %between% hours(c(0, 3))]),
sleep_baseline_day6h = mean(asleep[t %between% hours(c(0, 6))]),
sleep_baseline_all = mean(asleep[t %between% hours(c(-12, 12))]),
sleep_rebound_day3h = mean(asleep[t %between% (days(9) + hours(c(24, 24 +3)))]),
quiet_rebound_day3h = mean(!moving[t %between% (days(9) + hours(c(24, 24 +3)))]),
sleep_rebound_day6h = mean(asleep[t %between% (days(9) + hours(c(24, 24 +6)))]),
quiet_rebound_day6h = mean(!moving[t %between% (days(9) + hours(c(24, 24 +6)))]),
interactions = sum(interactions)
)
,by = id]
))
all_pl_objs$bar_sleep_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, sleep_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_sleep_reb_day6h <- ggplot(stat_rebound_dt, aes(interval, sleep_rebound_day6h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day6h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day6h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_interactions <- ggplot(stat_rebound_dt, aes(interval, interactions, colour=treatment)) + layer_barpl() + scale_y_sqrt()
# quiet is more linear!!
all_pl_objs$bar_quiet_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day6h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day6h, colour=treatment)) + layer_barpl()
ggplot(stat_rebound_dt, aes(x=quiet_baseline_day3h, y=quiet_rebound_day3h)) + geom_point(alpha=.3) + facet_grid(sex ~ .) + scale_x_sqrt()+ scale_y_sqrt()
ggplot(stat_rebound_dt[sdi %in% c(0, 10)], aes(x=quiet_baseline_day3h, y=quiet_rebound_day3h, colour=treatment)) + geom_point(alpha=1) + facet_grid(sex ~ .) + 
#geom_smooth(data=stat_rebound_dt[treatment=="Control"])
geom_smooth(method = "lm")
mod <- lm(quiet_rebound_day3h ~ quiet_baseline_day3h * sex, stat_rebound_dt[sdi == 0])
stat_rebound_dt[, quiet_rebound_day3h_pred := predict(mod, stat_rebound_dt)]
stat_rebound_dt[, quiet_rebound_day3h_diff := quiet_rebound_day3h - quiet_rebound_day3h_pred]
stat_rebound_dt[, quiet_rebound_day3h_pred_sign := quiet_rebound_day3h_diff > 0]
all_pl_objs$bar_quiet_reb_day3h_min_baseline <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h - quiet_baseline_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day3h_diff <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h_diff * 3 * 60, colour=treatment)) + layer_barpl() +
geom_hline(yintercept=0, colour="red", linetype=2) + scale_y_continuous(name="Extra quiescence in 3h (min)")
summ_stat <- stat_rebound_dt[,{
w = wilcox.test(quiet_rebound_day3h_diff, mu=0, alternative="greater")
list(pval=w$p.value, n=.N)},
keyby="sex,interval,treatment"]
summ_stat[, text:=sprintf("%s\nN=%03d", stars.pval(pval), n)]
all_pl_objs$bar_quiet_reb_day3h_diff <- all_pl_objs$bar_quiet_reb_day3h_diff + geom_label(data= summ_stat, aes(x=interval, label=text),  y=-0.25 * 180, colour="black")
all_pl_objs$bar_quiet_has_reb <- ggplot(stat_rebound_dt, aes(interval, as.numeric(quiet_rebound_day3h_pred_sign > 0), colour=treatment)) + layer_barpl() + 
scale_y_continuous(labels = scales::percent, name="Animals with positive rebound") +
geom_hline(yintercept=0.5, colour="red", linetype=2)
summ_stat <- stat_rebound_dt[,{
w= binom.test(sum(quiet_rebound_day3h_pred_sign),.N, alternative="greater")
list(
pval=w$p.value, 
n=.N, s=sum(quiet_rebound_day3h_pred_sign))},
keyby="sex,interval,treatment"]
summ_stat[, text:=sprintf("%s\nN=%03d", stars.pval(pval), n)]
all_pl_objs$bar_quiet_has_reb <- all_pl_objs$bar_quiet_has_reb  + geom_label(data= summ_stat, aes(x=interval, label=text),  y=0.25, colour="black")
pdf("rebound_quantif.pdf", w=8,h=8)
all_pl_objs$bar_quiet_reb_day3h 
all_pl_objs$bar_quiet_reb_day3h_min_baseline
all_pl_objs$bar_quiet_reb_day3h_diff 
all_pl_objs$bar_quiet_has_reb
dev.off()
library(survminer)
library(survival)
#surv_data <- fread("/tmp/prolonged_sd_stat_dt.csv")
surv_data <- dt[meta=T]
surv_data[, dead := 1+ !is.infinite(lifespan)] # dead = 2, censored = 1
surv_data[, lifespan_baseline := lifespan - baseline_days]
surv_data[, lifespan_baseline := ifelse(is.infinite(lifespan), 10,lifespan - baseline_days)]
s <- survfit(Surv(lifespan_baseline, dead) ~ sex + treatment, data = surv_data)
ggsurv <- ggsurvplot(s, data=surv_data, conf.int = TRUE, palette=rep(CONTROL_SD_PALETTE, 2))
pl <- ggsurv$plot  + facet_grid( sex ~ .) + theme_grey()
pl <- pl + annotate("segment",y = .70, yend = .70,   x = .5, xend = 10,   colour = "black",alpha=0.5,size=3) +
        annotate("text",y=0.75,x= 9.5/2, label="treatment") +
        scale_y_continuous(labels = scales::percent)
        
pdf("prolonged_sd_surv.pdf", w=12,h=6)
pl
dev.off()
stat_rebound_dt <- na.omit(rejoin(
dt[,
.(
sleep_baseline_day = mean(asleep[t %between%  hours(c(0, 12))]),
sleep_baseline_night = mean(asleep[t %between% hours(c(-12, 0))]),
sleep_baseline_day3h = mean(asleep[t %between% hours(c(0, 3))]),
quiet_baseline_day3h = mean(!moving[t %between% hours(c(0, 3))]),
sleep_baseline_day6h = mean(asleep[t %between% hours(c(0, 6))]),
sleep_baseline_all = mean(asleep[t %between% hours(c(-12, 12))]),
sleep_rebound_day3h = mean(asleep[t %between% (days(9) + hours(c(24, 24 +3)))]),
quiet_rebound_day3h = mean(!moving[t %between% (days(9) + hours(c(24, 24 +3)))]),
sleep_rebound_day6h = mean(asleep[t %between% (days(9) + hours(c(24, 24 +6)))]),
quiet_rebound_day6h = mean(!moving[t %between% (days(9) + hours(c(24, 24 +6)))]),
overall_sleep = mean(asleep[t %between% days(c(-3, 9))]),
interactions = sum(interactions)
)
,by = id]
))
corr_data <- stat_rebound_dt[surv_data[, list(id, lifespan_baseline)]][is.finite(lifespan)]
pdf("prolonged_sd_correlations.pdf")
ggplot(corr_data[treatment == "Control"], aes(x=overall_sleep, y=lifespan_baseline, colour=sex, shape=sex)) + 
geom_point() + 
geom_smooth(method="lm") 
corr_dt <- corr_data[treatment == "Control" & sex=="M"]
cor.test(corr_dt$lifespan_baseline, corr_dt$overall_sleep, method="spearman")
corr_dt <- corr_data[treatment == "Control" & sex=="F"]
cor.test(corr_dt$lifespan_baseline, corr_dt$overall_sleep, method="spearman")
ggplot(corr_data[treatment != "Control"], aes(x=interactions, y=lifespan_baseline, colour=sex, shape=sex)) + 
geom_point() + 
geom_smooth(method="lm") 
corr_dt <- corr_data[treatment != "Control" & sex=="M"]
cor.test(corr_dt$lifespan_baseline, corr_dt$interactions, method="spearman")
corr_dt <- corr_data[treatment != "Control" & sex=="F"]
cor.test(corr_dt$lifespan_baseline, corr_dt$interactions, method="spearman")
dev.off()
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
tmp_ts <- ts(stim_simple_dt[sex=="F", N_stimuli],  frequency=48) # 48 obervations a day
stim_dt <- dt[t > days(1) &  t < days(10) & xmv(treatment) == "SD"]
stim_dt <-behavr::bin_apply_all(stim_dt, y=interactions, x_bin_length=mins(30), FUN=sum)
stim_simple_dt <- rejoin(stim_dt)[, .(N_stimuli = mean(interactions)), by="t,sex"]
ggplot(stim_simple_dt, aes(x=t, y=N_stimuli, colour=sex)) + geom_line()
stim_simple_dt,
stim_simple_dt
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
s
s[, "trend"]
s$trend
s[,1]
s[1]
s[2]
s[1][, "trend"]
s[[1]][, "trend"]
data.table(s[[1]][, "trend"])
s
rownames(s[[1]])
s$time.series
ts <- s$time.series
ts
ts@tsp
ts
as.data.frame(ts)
class(ts)
time(ts)
#ts <- s$time.series
ts$trend
data.table(interactions = ts[, "trend"], t = times(ts) * days(1))
data.table(interactions = ts[, "trend"], t = time(ts) * days(1))
data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
ts <- s$time.series
dt_m <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="M")
dt_m
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_f <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
tmp_ts <- ts(stim_simple_dt[sex=="F", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_m <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="M")
dt_m
all_pl_objs$etho_stimuli
 ggetho(dt[xmv(sdi) == 10 T > days(1)],
                                    aes(y = interactions, fill=treatment),
                                    summary_FUN = sum) +
                                  layers() + scale_y_continuous(limits = c(NA,NA))
all_pl_objs$etho_stimuli <- ggetho(dt[xmv(sdi) == 10 & t > days(1)],
                                    aes(y = interactions, fill=treatment),
                                    summary_FUN = sum) +
                                  layers() + scale_y_continuous(limits = c(NA,NA))
 all_pl_objs$etho_stimuli 
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=treatment),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
ethogram_theme
all_pl_objs$etho_stimuli_2 
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
ethogram_theme
all_pl_objs$etho_stimuli_2 
all_pl_objs$etho_stimuli_2  + geom_line(data=rbind(dt_f, dt_m) 
)
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_f <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="M")
tmp_ts <- ts(stim_simple_dt[sex=="F", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_m <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
geom_line(data=rbind(dt_f, dt_m, alpha=.5, size=3) +
ethogram_theme

all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
geom_line(data=rbind(dt_f, dt_m), alpha=.5, size=3) +
ethogram_theme
all_pl_objs$etho_stimuli_2
pdf("seasonal_decomposition_N_stimulus.pdf", w=8, h=4.5)
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_f <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="M")
tmp_ts <- ts(stim_simple_dt[sex=="F", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_m <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
geom_line(data=rbind(dt_f, dt_m), alpha=.5, size=3) +
ethogram_theme
all_pl_objs$etho_stimuli_2
dev.off()
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot, linetype=2) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
geom_line(data=rbind(dt_f, dt_m), alpha=.5, size=3) +
ethogram_theme
all_pl_objs$etho_stimuli_2
pdf("seasonal_decomposition_N_stimulus.pdf", w=8, h=4.5)
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_f <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="M")
tmp_ts <- ts(stim_simple_dt[sex=="F", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_m <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot, linetype=2) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
geom_line(data=rbind(dt_f, dt_m),  size=2) +
ethogram_theme
all_pl_objs$etho_stimuli_2
dev.off()
all_pl_objs$etho_distance_wrapped_day_7_to_10 <- ggetho(dt[t > days(7) &  t < days(10) & xmv(sdi) %in% c(0,10)],
                                    aes(y = distance / 9, fill=treatment),
                                    summary_FUN = sum,  time_wrap= hours(24)) +  
layers() + scale_y_continuous(limits = c(NA,NA)) +
coord_cartesian(xlim = c(days(0),days(1)))
all_pl_objs$etho_distance_wrapped_day_7_to_10 
all_pl_objs$etho_stimuli_rel_day_7_to_10 <- ggetho(dt[t > days(7) &  t < days(10) & xmv(treatment) == "SD"],
                                    aes(y = (interactions / 10) / (1/as.numeric(interval))),
                                    summary_FUN = mean, time_wrap= hours(24)) +
                                  layers(annotate=F) + scale_y_continuous(name="N_interactions / N_maximum" ,limits = c(NA,NA)) + coord_cartesian(xlim = c(days(0),days(1)))
all_pl_objs <- list()
# a set of layers or our next big plots
layers <- function(palette = CONTROL_SD_PALETTE, annotate=TRUE){
  out <- list(
    stat_pop_etho(method= mean_cl_boot),
    facet_grid( sex ~ .),
    stat_ld_annotations(),
    coord_cartesian(xlim = c(days(-3),days(12))),
    scale_y_continuous(limits = c(NA,1)),
    scale_fill_manual(values=palette),
    scale_colour_manual(values=palette), 
    ethogram_theme
    )
  if(annotate)
    out <- c(out, list(
        annotate("segment",y = .9, yend = .9,   x = days(.5), xend = days(10),   colour = "black",alpha=0.5,size=3),
        annotate("text",y=0.95,x=days(9.5/2), label="treatment")
    ))
    out
}
zoomed_cartesian <-  coord_cartesian(xlim = c(days(9.5),days(11)))
all_pl_objs$etho_sleep <- ggetho(dt[xmv(sdi) %in% c(0,10)],
                                    aes(y = asleep, fill=treatment)) +
layers()
all_pl_objs$etho_sleep_zoom <- all_pl_objs$etho_sleep +
                                  zoomed_cartesian
all_pl_objs$etho_quiet <- ggetho(dt[xmv(sdi) %in% c(0,10)],
                                    aes(y = !moving, fill=treatment)) +
layers()
all_pl_objs$etho_quiet_zoom <- all_pl_objs$etho_quiet +
                                    zoomed_cartesian
all_pl_objs$etho_stimuli <- ggetho(dt[xmv(sdi) %in% c(0,10)],
                                    aes(y = interactions, fill=treatment),
                                    summary_FUN = sum) +
                                  layers() + scale_y_continuous(limits = c(NA,NA))
all_pl_objs$etho_stimuli_zoom <- all_pl_objs$etho_stimuli +
                                        zoomed_cartesian
                                        
dt[, interval := as.numeric(as.character(xmv(interval)))]
all_pl_objs$etho_stimuli_rel_ovrw <- ggetho(dt[t > days(1) &  t < days(10) & xmv(treatment) == "SD"],
                                    aes(z = (interactions / 10) / (1/as.numeric(interval))),
                                    summary_FUN = mean) +
                                    stat_tile_etho()
                                    
all_pl_objs$etho_stimuli_rel <- ggetho(dt[t > days(1) &  t < days(10) & xmv(treatment) == "SD"],
                                    aes(y = (interactions / 10) / (1/as.numeric(interval))),
                                    summary_FUN = mean, time_wrap= hours(24)) +
                                  layers(annotate=F) + scale_y_continuous(name="N_interactions / N_maximum" ,limits = c(NA,NA)) + coord_cartesian(xlim = c(days(0),days(1)))
all_pl_objs$etho_stimuli_rel_day_7_to_10 <- ggetho(dt[t > days(7) &  t < days(10) & xmv(treatment) == "SD"],
                                    aes(y = (interactions / 10) / (1/as.numeric(interval))),
                                    summary_FUN = mean, time_wrap= hours(24)) +
                                  layers(annotate=F) + scale_y_continuous(name="N_interactions / N_maximum" ,limits = c(NA,NA)) + coord_cartesian(xlim = c(days(0),days(1)))
dt[, distance := abs(c(0, diff(x))), by=id]
all_pl_objs$etho_distance <- ggetho(dt[xmv(sdi) %in% c(0,10)],
                                    aes(y = distance, fill=treatment),
                                    summary_FUN = sum) +
                                  layers() + scale_y_continuous(limits = c(NA,NA))
all_pl_objs$etho_distance_wrapped <- ggetho(dt[t > days(1) &  t < days(10) & xmv(sdi) %in% c(0,10)],
                                    aes(y = distance / 9, fill=treatment),
                                    summary_FUN = sum,  time_wrap= hours(24)) +  
layers() + scale_y_continuous(limits = c(NA,NA)) +
coord_cartesian(xlim = c(days(0),days(1)))
all_pl_objs$etho_distance_wrapped_day_7_to_10 <- ggetho(dt[t > days(7) &  t < days(10) & xmv(sdi) %in% c(0,10)],
                                    aes(y = distance / 9, fill=treatment),
                                    summary_FUN = sum,  time_wrap= hours(24)) +  
layers() + scale_y_continuous(limits = c(NA,NA)) +
coord_cartesian(xlim = c(days(0),days(1)))
(1 value/animal)
# shared layers
layer_barpl <- function(){
list(
facet_grid(sex ~ .),
geom_jitter(alpha=.3, height=0),
stat_summary(fun.y = "mean", geom="point", shape = 4, size=2.5, colour="black"),
stat_summary(fun.data = "mean_cl_boot", geom="errorbar",colour="black"),
scale_fill_manual(values=CONTROL_SD_PALETTE),
scale_colour_manual(values=CONTROL_SD_PALETTE), generic_theme
)
}
stat_rebound_dt <- na.omit(rejoin(
dt[,
.(
overall_sleep = mean(asleep),
sleep_baseline_day = mean(asleep[t %between%  hours(c(0, 12))]),
sleep_baseline_night = mean(asleep[t %between% hours(c(-12, 0))]),
sleep_baseline_day3h = mean(asleep[t %between% hours(c(0, 3))]),
quiet_baseline_day3h = mean(!moving[t %between% hours(c(0, 3))]),
sleep_baseline_day6h = mean(asleep[t %between% hours(c(0, 6))]),
sleep_baseline_all = mean(asleep[t %between% hours(c(-12, 12))]),
sleep_rebound_day3h = mean(asleep[t %between% (days(9) + hours(c(24, 24 +3)))]),
quiet_rebound_day3h = mean(!moving[t %between% (days(9) + hours(c(24, 24 +3)))]),
sleep_rebound_day6h = mean(asleep[t %between% (days(9) + hours(c(24, 24 +6)))]),
quiet_rebound_day6h = mean(!moving[t %between% (days(9) + hours(c(24, 24 +6)))]),
interactions = sum(interactions)
)
,by = id]
))
all_pl_objs$bar_sleep_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, sleep_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_sleep_reb_day6h <- ggplot(stat_rebound_dt, aes(interval, sleep_rebound_day6h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day6h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day6h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_interactions <- ggplot(stat_rebound_dt, aes(interval, interactions, colour=treatment)) + layer_barpl() + scale_y_sqrt()
# quiet is more linear!!
all_pl_objs$bar_quiet_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day3h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day6h <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day6h, colour=treatment)) + layer_barpl()
ggplot(stat_rebound_dt, aes(x=quiet_baseline_day3h, y=quiet_rebound_day3h)) + geom_point(alpha=.3) + facet_grid(sex ~ .) + scale_x_sqrt()+ scale_y_sqrt()
ggplot(stat_rebound_dt[sdi %in% c(0, 10)], aes(x=quiet_baseline_day3h, y=quiet_rebound_day3h, colour=treatment)) + geom_point(alpha=1) + facet_grid(sex ~ .) + 
#geom_smooth(data=stat_rebound_dt[treatment=="Control"])
geom_smooth(method = "lm")
mod <- lm(quiet_rebound_day3h ~ quiet_baseline_day3h * sex, stat_rebound_dt[sdi == 0])
stat_rebound_dt[, quiet_rebound_day3h_pred := predict(mod, stat_rebound_dt)]
stat_rebound_dt[, quiet_rebound_day3h_diff := quiet_rebound_day3h - quiet_rebound_day3h_pred]
stat_rebound_dt[, quiet_rebound_day3h_pred_sign := quiet_rebound_day3h_diff > 0]
all_pl_objs$bar_quiet_reb_day3h_min_baseline <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h - quiet_baseline_day3h, colour=treatment)) + layer_barpl()
all_pl_objs$bar_quiet_reb_day3h_diff <- ggplot(stat_rebound_dt, aes(interval, quiet_rebound_day3h_diff * 3 * 60, colour=treatment)) + layer_barpl() +
geom_hline(yintercept=0, colour="red", linetype=2) + scale_y_continuous(name="Extra quiescence in 3h (min)")
summ_stat <- stat_rebound_dt[,{
w = wilcox.test(quiet_rebound_day3h_diff, mu=0, alternative="greater")
list(pval=w$p.value, n=.N)},
keyby="sex,interval,treatment"]
summ_stat[, text:=sprintf("%s\nN=%03d", stars.pval(pval), n)]
all_pl_objs$bar_quiet_reb_day3h_diff <- all_pl_objs$bar_quiet_reb_day3h_diff + geom_label(data= summ_stat, aes(x=interval, label=text),  y=-0.25 * 180, colour="black")
all_pl_objs$bar_quiet_has_reb <- ggplot(stat_rebound_dt, aes(interval, as.numeric(quiet_rebound_day3h_pred_sign > 0), colour=treatment)) + layer_barpl() + 
scale_y_continuous(labels = scales::percent, name="Animals with positive rebound") +
geom_hline(yintercept=0.5, colour="red", linetype=2)
summ_stat <- stat_rebound_dt[,{
w= binom.test(sum(quiet_rebound_day3h_pred_sign),.N, alternative="greater")
list(
pval=w$p.value, 
n=.N, s=sum(quiet_rebound_day3h_pred_sign))},
keyby="sex,interval,treatment"]
summ_stat[, text:=sprintf("%s\nN=%03d", stars.pval(pval), n)]
all_pl_objs$bar_quiet_has_reb <- all_pl_objs$bar_quiet_has_reb  + geom_label(data= summ_stat, aes(x=interval, label=text),  y=0.25, colour="black")
stim_dt <- dt[t > days(1) &  t < days(10) & xmv(treatment) == "SD"]
stim_dt <-behavr::bin_apply_all(stim_dt, y=interactions, x_bin_length=mins(30), FUN=sum)
stim_simple_dt <- rejoin(stim_dt)[, .(N_stimuli = mean(interactions)), by="t,sex"]
ggplot(stim_simple_dt, aes(x=t, y=N_stimuli, colour=sex)) + geom_line()
tmp_ts <- ts(stim_simple_dt[sex=="M", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_f <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="M")
tmp_ts <- ts(stim_simple_dt[sex=="F", N_stimuli],  frequency=48) # 48 obervations a day
s <- stl(tmp_ts,s.window="per")
apply(s$time.series,2, var) / var(tmp_ts)
plot(s)
ts <- s$time.series
dt_m <- data.table(interactions = ts[, "trend"], t = time(ts) * days(1), sex="F")
all_pl_objs$etho_stimuli_2 <- ggetho(dt[xmv(sdi) == 10 & t > days(1) & t < days(10)],
                                    aes(y = interactions, fill=sex),
                                    summary_FUN = sum) +
                                    stat_pop_etho(method= mean_cl_boot, linetype=2) +
stat_ld_annotations() + scale_y_continuous(limits = c(NA,NA)) +
scale_fill_manual(values=FEMALE_MALE_PALETTE) +scale_colour_manual(values=FEMALE_MALE_PALETTE) +
geom_line(data=rbind(dt_f, dt_m),  size=2) +
ethogram_theme
pdf("prolonged_sd_rebound.pdf", w=12,h=6)
for(p_name in names(all_pl_objs)){
    pl <- all_pl_objs[[which(names(all_pl_objs) == p_name)]]
    print(pl + ggtitle(p_name))
}
dev.off()
all_pl_objs$etho_distance_wrapped_day_7_to_10 <- ggetho(dt[t > days(7) &  t < days(10) & xmv(sdi) %in% c(0,10)],
                                    aes(y = distance / 3, fill=treatment),
                                    summary_FUN = sum,  time_wrap= hours(24)) +  
layers() + scale_y_continuous(limits = c(NA,NA)) +
coord_cartesian(xlim = c(days(0),days(1)))
pdf("prolonged_sd_rebound.pdf", w=12,h=6)
for(p_name in names(all_pl_objs)){
print(p_name)
    pl <- all_pl_objs[[which(names(all_pl_objs) == p_name)]]
    print(pl + ggtitle(p_name))
}
dev.off()
